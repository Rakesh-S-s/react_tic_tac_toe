{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","Array","fill","_useState2","Object","slicedToArray","values","setValues","_useState3","_useState4","winner","setWinner","_useState5","_useState6","xo","setXo","handleClick","num","dup","toConsumableArray","combinations","h","v","d","combi","forEach","pattern","checkWinner","Cell","_ref","react_default","a","createElement","onClick","className","Fragment","Alert","variant","Button","ReactDOM","createRoot","document","getElementById","render","react_router_dom","src_App"],"mappings":"yOA8GeA,MAzGf,WAAe,IAAAC,EACeC,mBAASC,MAAM,GAAGC,KAAK,KADtCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACNO,EADMH,EAAA,GACEI,EADFJ,EAAA,GAAAK,EAEeR,mBAAS,IAFxBS,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEEE,EAFFF,EAAA,GAAAG,EAGOZ,mBAAS,KAHhBa,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGNE,EAHMD,EAAA,GAGFE,EAHEF,EAAA,GAuCPG,EAAc,SAACC,GACnB,GAAoB,KAAhBX,EAAOW,KAGRP,EAAH,CAGA,IAAMQ,EAAGd,OAAAe,EAAA,EAAAf,CAAOE,GAGdS,EADS,MAAPD,EACI,IAEA,KAERI,EAAID,GAAOH,EACXP,EAAUW,GAjDQ,SAACA,GACnB,IAAME,EAAe,CACnBC,EAAG,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,EAAG,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,EAAG,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGX,IAAK,IAAIC,KAASJ,EAChBA,EAAaI,GAAOC,QAAQ,SAACC,GAEL,KAApBR,EAAIQ,EAAQ,KACQ,KAApBR,EAAIQ,EAAQ,KACQ,KAApBR,EAAIQ,EAAQ,KAGZR,EAAIQ,EAAQ,MAAQR,EAAIQ,EAAQ,KAChCR,EAAIQ,EAAQ,MAAQR,EAAIQ,EAAQ,KAEhCf,EAAUO,EAAIQ,EAAQ,OAsB5BC,CAAYT,KAGRU,EAAO,SAAAC,GAAa,IAAVZ,EAAUY,EAAVZ,IACd,OAAOa,EAAAC,EAAAC,cAAA,MAAIC,QAAS,kBAAMjB,EAAYC,KAAOX,EAAOW,KAQtD,OACEa,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,eACAJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,MACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACJ,EAAD,CAAMX,IAAK,IACXa,EAAAC,EAAAC,cAACJ,EAAD,CAAMX,IAAK,IACXa,EAAAC,EAAAC,cAACJ,EAAD,CAAMX,IAAK,KAEba,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACJ,EAAD,CAAMX,IAAK,IACXa,EAAAC,EAAAC,cAACJ,EAAD,CAAMX,IAAK,IACXa,EAAAC,EAAAC,cAACJ,EAAD,CAAMX,IAAK,KAEba,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACJ,EAAD,CAAMX,IAAK,IACXa,EAAAC,EAAAC,cAACJ,EAAD,CAAMX,IAAK,IACXa,EAAAC,EAAAC,cAACJ,EAAD,CAAMX,IAAK,OAIjBa,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACZxB,GACCoB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACCL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,QAAQ,WAAf,YAAmC3B,GAClCoB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQL,QAhCH,WACb1B,EAAUN,MAAM,GAAGC,KAAK,KACxBS,EAAU,KA8BuBuB,UAAU,MAAMG,QAAQ,kBAAjD,uBC/FCE,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAACa,EAAD,QAIa/C","file":"static/js/main.f1c6739e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [values, setValues] = useState(Array(9).fill(\"\"));\n  const [winner, setWinner] = useState(\"\");\n  const [xo, setXo] = useState(\"X\");\n\n  const checkWinner = (dup) => {\n    const combinations = {\n      h: [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n      ],\n      v: [\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n      ],\n      d: [\n        [0, 4, 8],\n        [2, 4, 6],\n      ],\n    };\n    for (let combi in combinations) {\n      combinations[combi].forEach((pattern) => {\n        if (\n          dup[pattern[0]] === \"\" ||\n          dup[pattern[1]] === \"\" ||\n          dup[pattern[2]] === \"\"\n        ) {\n        } else if (\n          dup[pattern[0]] === dup[pattern[1]] &&\n          dup[pattern[1]] === dup[pattern[2]]\n        ) {\n          setWinner(dup[pattern[0]]);\n        }\n      });\n    }\n  };\n\n  const handleClick = (num) => {\n    if (values[num] !== \"\") {\n      return;\n    }\n    if(winner){\n      return;\n    }\n    const dup = [...values];\n\n    if (xo === \"X\") {\n      setXo(\"O\");\n    } else {\n      setXo(\"X\");\n    }\n    dup[num] = xo;\n    setValues(dup);\n    checkWinner(dup);\n  };\n\n  const Cell = ({ num }) => {\n    return <td onClick={() => handleClick(num)}>{values[num]}</td>;\n  };\n\n  const relaod = () => {\n    setValues(Array(9).fill(\"\"));\n    setWinner(\"\");\n  };\n\n  return (\n    <div className=\"container\">\n    <div className=\"App\">\n      <h1 className=\"hea mb-3\">Tic Tac Toe</h1>\n      <table className=\"td\">\n        <tbody>\n          <tr>\n            <Cell num={0} />\n            <Cell num={1} />\n            <Cell num={2} />\n          </tr>\n          <tr>\n            <Cell num={3} />\n            <Cell num={4} />\n            <Cell num={5} />\n          </tr>\n          <tr>\n            <Cell num={6} />\n            <Cell num={7} />\n            <Cell num={8} />\n          </tr>\n        </tbody>\n      </table>\n      <div className=\"winner\">\n        {winner && (\n          <>\n           <Alert variant=\"success\">WINNER : {winner}</Alert>\n            <Button onClick={relaod} className=\"m-4\" variant=\"outline-danger\">\n              &#8635;\n            </Button>\n          </>\n        )}\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n<BrowserRouter>\n  <App/>\n  </BrowserRouter>\n)\n\nexport default App;"],"sourceRoot":""}